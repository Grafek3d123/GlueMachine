import time
import tkinter as tk
from tkinter import font
import board
import adafruit_htu21d
from gpiozero import Button
import threading

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞—Ç—á–∏–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∏ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ HTU21D
i2c = board.I2C()
sensor = adafruit_htu21d.HTU21D(i2c)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
time_left = 421  # 7 –º–∏–Ω—É—Ç –∏ 1 —Å–µ–∫—É–Ω–¥–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (421 —Å–µ–∫—É–Ω–¥–∞)
count = 0  # –°—á—ë—Ç—á–∏–∫ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π
temp = 99  # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ 99¬∞C
timer_running = False  # –¢–∞–π–º–µ—Ä –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
fullscreen = False  # –ù–∞—á–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º: —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GPIO –∫–Ω–æ–ø–æ–∫
start_button = Button(17, pull_up=True)  # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç–∞–π–º–µ—Ä–∞ (GPIO 17)
stop_button = Button(27, pull_up=True)   # –ö–Ω–æ–ø–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–∞–π–º–µ—Ä–∞ (GPIO 27)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
def update_timer():
    global time_left, timer_running

    if timer_running:  # –ï—Å–ª–∏ —Ç–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω
        if time_left > 0:
            time_left -= 1
            time_label.config(text=f"{time_left // 60}:{time_left % 60:02}")
        else:
            timer_running = False  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ –≤—Ä–µ–º—è –≤—ã—à–ª–æ

    count_label.config(text=f"{count:02}")
    temp_label.config(text=f"{temp:.1f}¬∞C")

    # –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
    root.after(1000, update_timer)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
def update_temperature():
    global temp
    while True:
        temp = sensor.temperature  # –ß—Ç–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã —Å –¥–∞—Ç—á–∏–∫–∞
        time.sleep(10)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –∑–∞–ø—É—Å–∫–∞
def start_button_pressed():
    global timer_running, time_left, count

    if not timer_running:  # –ï—Å–ª–∏ —Ç–∞–π–º–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        count += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫
        time_left = 421  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –Ω–∞ 7 –º–∏–Ω—É—Ç –∏ 1 —Å–µ–∫—É–Ω–¥—É
        time_label.config(text=f"{time_left // 60}:{time_left % 60:02}")  # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
        timer_running = True  # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
def stop_button_pressed():
    global timer_running
    timer_running = False  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É —Ä–µ–∂–∏–º–∞–º–∏
def toggle_mode():
    global fullscreen
    fullscreen = not fullscreen

    # –û—á–∏—Å—Ç–∫–∞ –æ–∫–Ω–∞
    for widget in root.winfo_children():
        widget.destroy()

    # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Ä–µ–∂–∏–º–∞–º–∏
    if fullscreen:
        root.attributes('-fullscreen', True)
        display_fullscreen_mode()
    else:
        root.attributes('-fullscreen', False)
        display_testing_mode()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞
def position_toggle_button():
    toggle_button.place(x=root.winfo_width() - 60, y=10)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
def display_testing_mode():
    global time_label, count_label, temp_label, toggle_button

    # –ú–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
    time_label = tk.Label(root, text="7:01", font=large_font)
    time_label.pack()

    # –ú–µ—Ç–∫–∞ —Å—á—ë—Ç—á–∏–∫–∞
    count_label = tk.Label(root, text="00", font=large_font)
    count_label.pack()

    # –ú–µ—Ç–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
    temp_label = tk.Label(root, text="99¬∞C", font=large_font)
    temp_label.pack()

    # –ö–Ω–æ–ø–∫–∞ "–°—Ä–∞–±–æ—Ç–∞—Ç—å"
    start_button_gui = tk.Button(root, text="–°—Ä–∞–±–æ—Ç–∞—Ç—å", font=large_font, command=start_button_pressed)
    start_button_gui.pack()

    # –ö–Ω–æ–ø–∫–∞ "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
    stop_button_gui = tk.Button(root, text="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", font=large_font, command=stop_button_pressed)
    stop_button_gui.pack()

    # –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞
    toggle_button = tk.Button(root, text="üîÑ", font=small_font, command=toggle_mode, width=2, height=1)
    position_toggle_button()  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ
def display_fullscreen_mode():
    global time_label, count_label, temp_label, toggle_button

    # –ú–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
    time_label = tk.Label(root, text="7:01", font=font.Font(family="Helvetica", size=250, weight="bold"))
    time_label.pack()

    # –ú–µ—Ç–∫–∞ —Å—á—ë—Ç—á–∏–∫–∞
    count_label = tk.Label(root, text="00", font=font.Font(family="Helvetica", size=250, weight="bold"))
    count_label.pack()

    # –ú–µ—Ç–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
    temp_label = tk.Label(root, text="99¬∞C", font=font.Font(family="Helvetica", size=250, weight="bold"))
    temp_label.pack()

    # –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞
    toggle_button = tk.Button(root, text="üîÑ", font=small_font, command=toggle_mode, width=2, height=1)
    position_toggle_button()  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏

# –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
root = tk.Tk()
root.title("–¢–∞–π–º–µ—Ä")
root.geometry("800x480")  # –†–∞–∑–º–µ—Ä –æ–∫–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à—Ä–∏—Ñ—Ç–æ–≤
large_font = font.Font(family="Helvetica", size=50, weight="bold")
small_font = font.Font(family="Helvetica", size=20, weight="bold")

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
display_testing_mode()

# –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞ –∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é –ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏
root.bind("<Configure>", lambda event: position_toggle_button())

# –ó–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
temperature_thread = threading.Thread(target=update_temperature, daemon=True)
temperature_thread.start()

# –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
update_timer()

# –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º
start_button.when_pressed = start_button_pressed
stop_button.when_pressed = stop_button_pressed

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
def close_app(event):
    root.quit()

# –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–ª–∞–≤–∏—à–∏ 'q' –∫ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
root.bind('q', close_app)

# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã
root.mainloop()

